ScrollScreen subroutine
	inc scroll_pos
        lda scroll_pos
        sta PPU_SCROLL
        lda scroll_pos + 1
        sta PPU_SCROLL
        and #1	
	ora #CTRL_NMI
        sta PPU_CTRL
        rts
        


SetPalette subroutine
	PPU_SETADDR $3f00
        ldy #0
.loop:
	lda Palette,y	; lookup byte in constant data -> palette
	sta PPU_DATA
        iny		
        cpy #32		
	bne .loop	; repeat until Y is 32	
        rts			



FillVRAM subroutine
	PPU_SETADDR $2000
        ldx #00
.loopA:
	lda Level1A,x
	sta PPU_DATA	
        inx		
	bne .loopA
.loopB:
	lda Level1B,x
	sta PPU_DATA	
        inx		
	bne .loopB
.loopC:
	lda Level1C,x
	sta PPU_DATA	
        inx		
	bne .loopC
.loopD:
	lda Level1D,x
	sta PPU_DATA	
        inx
	bne .loopD
.loopE:
	lda Level2A,x
	sta PPU_DATA	
        inx		
	bne .loopE
.loopF:
	lda Level2B,x
	sta PPU_DATA	
        inx		
	bne .loopF
.loopG:
	lda Level2C,x
	sta PPU_DATA	
        inx		
	bne .loopG
.loopH:
	lda Level2D,x
	sta PPU_DATA	
        inx
        
	bne .loopH
        rts			
        
        
        

	;align $100
Palette:
	hex 2a		;backgroundassembly
	hex 02122200	;background 0
        hex 02122200	;background 1
        hex 02112200	;background 2
        hex 02122200	;background 3
        hex 19293900	;sprite 0
        hex 02122200	;sprite 1
        hex 21212121	;sprite 2
        hex 33333333	;sprite 3


   	
